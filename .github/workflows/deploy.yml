name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.5
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - uses: marceloprado/has-changed-path@v1
        id: changed-back
        with:
          paths: server client/src/shared
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Setup key
      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.SSH_KEY }}" > "$HOME/.ssh/key"
      - run: chmod 600 "$HOME/.ssh/key"
      - run: pnpm install --frozen-lockfile
      # Build
      - name: Build
        run: pnpm run build
      - name: Deploy
      # Deploy
        if: steps.changed-back.outputs.changed == 'true'
        run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --exclude '.env.local' --archive --compress --delete -a node_modules build/ "${{ secrets.DEPLOY_PATH }}"

  deploy-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.9.5
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
      - uses: marceloprado/has-changed-path@v1
        id: changed-front
        with:
          paths: client
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # Setup key
      - run: set -eu
      - run: mkdir "$HOME/.ssh"
      - run: echo "${{ secrets.SSH_KEY }}" > "$HOME/.ssh/key"
      - run: chmod 600 "$HOME/.ssh/key"
      - run: pnpm install --frozen-lockfile
      # Build
      - name: Build
        run: pnpm run build
      # Deploy
      - name: Deploy to VK Mini Apps
        if: steps.changed-front.outputs.changed == 'true'
        run: MINI_APPS_ACCESS_TOKEN="${{ secrets.MINI_APPS_ACCESS_TOKEN }}" pnpm run deploy
      - name: Deploy to VDS
        if: steps.changed-front.outputs.changed == 'true'
        run: cd build && rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete . "${{ secrets.FRONTEND_DEPLOY_PATH }}"
